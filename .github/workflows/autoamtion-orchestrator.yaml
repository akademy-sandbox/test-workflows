name: Orchestrator Workflow

on:
  workflow_dispatch:
    inputs:
      application:
        description: "Select the application"
        required: true
        type: choice
        options: ['postilion-device-driver', 'postilion-office']
        default: postilion-device-driver

      automation_task:
        description: "Select the automation task"
        required: true
        type: choice
        options: ['atm-onboarding-for-dcc-config', 'file-cleanup']
        default: atm-onboarding-for-dcc-config

      action:
        description: "Select the action"
        required: true
        type: choice
        options: ['install', 'run', 'uninstall']
        default: install
      
      data_centre:
        description: "Select the data center where the target server is deployed"
        required: true
        type: choice
        options: ['ultimo', 'homebush']
        default: ultimo        

      environment:
        description: "Target environment"
        required: true
        type: choice
        options: ['dev', 'test', 'qa', 'preprod', 'prod']
        default: dev

      environment_type:
        description: "Environment Type (onpremise/cloud)"
        required: true
        type: choice
        options: ['onpremise', 'cloud']
        default: onpremise

  schedule:
    - cron: "*/2 * * * *"
    - cron: "0 21 * * 1"
    - cron: "0 22 * * 1"
    - cron: "0 23 * * 1"
    - cron: "0 23 * * 1"

jobs:
  orchestrator:
    name: Determine Trigger Event and Input Params
    runs-on: ubuntu-latest
    steps:
      - name: Determine Inputs Based on Trigger Type
        id: set-vars
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Using workflow_dispatch inputs"
            echo "application=${{ github.event.inputs.application }}" >> $GITHUB_OUTPUT
            echo "automation_task=${{ github.event.inputs.automation_task }}" >> $GITHUB_OUTPUT
            echo "action=${{ github.event.inputs.action }}" >> $GITHUB_OUTPUT
            echo "data_centre=${{ github.event.inputs.data_centre }}" >> $GITHUB_OUTPUT
            echo "environment=${{ github.event.inputs.environment }}" >> $GITHUB_OUTPUT
            echo "environment_type=${{ github.event.inputs.environment_type }}" >> $GITHUB_OUTPUT

            echo "Triggering Automation Workflow"
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d "{\"event_type\":\"trigger-automation\",\"client_payload\":{\"application\":\"${{ github.event.inputs.application }}\",\"automation_task\":\"${{ github.event.inputs.automation_task }}\",\"action\":\"${{ github.event.inputs.action }}\",\"data_centre\":\"${{ github.event.inputs.data_centre }}\",\"environment\":\"${{ github.event.inputs.environment }}\",\"environment_type\":\"${{ github.event.inputs.environment_type }}\"}}"
          else
            case "${{ github.event.schedule }}" in
              "*/5 * * * *")
                echo "Matched cron: 0 20 * * 1 - Assigning parameters."
                echo "application=postilion-device-driver" >> $GITHUB_OUTPUT
                echo "automation_task=atm-onboarding-for-dcc-config" >> $GITHUB_OUTPUT
                echo "action=run" >> $GITHUB_OUTPUT
                echo "data_centre=ultimo" >> $GITHUB_OUTPUT
                echo "environment=dev" >> $GITHUB_OUTPUT
                echo "environment_type=onpremise" >> $GITHUB_OUTPUT
                ;;
              "0 21 * * 1")
                echo "Matched cron: 0 21 * * 1 - Assigning parameters."
                echo "application=postilion-device-driver" >> $GITHUB_OUTPUT
                echo "automation_task=atm-onboarding-for-dcc-config" >> $GITHUB_OUTPUT
                echo "action=run" >> $GITHUB_OUTPUT
                echo "data_centre=ultimo" >> $GITHUB_OUTPUT
                echo "environment=test" >> $GITHUB_OUTPUT
                echo "environment_type=onpremise" >> $GITHUB_OUTPUT
                ;;
              "0 22 * * 1")
                echo "Matched cron: 0 22 * * 1 - Assigning parameters."
                echo "application=postilion-device-driver" >> $GITHUB_OUTPUT
                echo "automation_task=atm-onboarding-for-dcc-config" >> $GITHUB_OUTPUT
                echo "action=run" >> $GITHUB_OUTPUT
                echo "data_centre=ultimo" >> $GITHUB_OUTPUT
                echo "environment=qa" >> $GITHUB_OUTPUT
                echo "environment_type=onpremise" >> $GITHUB_OUTPUT
                ;;
              "0 23 * * 1")
                echo "Matched cron: 0 23 * * 1 - Assigning parameters."
                echo "application=postilion-device-driver" >> $GITHUB_OUTPUT
                echo "automation_task=atm-onboarding-for-dcc-config" >> $GITHUB_OUTPUT
                echo "action=run" >> $GITHUB_OUTPUT
                echo "data_centre=ultimo" >> $GITHUB_OUTPUT
                echo "environment=preprod" >> $GITHUB_OUTPUT
                echo "environment_type=onpremise" >> $GITHUB_OUTPUT
                ;;
              *)
                echo "No matching cron schedule found. Skipping execution."
                exit 0
                ;;
            esac

            echo "Triggering Automation Workflow"
            curl -X POST \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/dispatches \
              -d "{\"event_type\":\"trigger-automation\",\"client_payload\":{\"application\":\"${{ steps.set-vars.outputs.application }}\",\"automation_task\":\"${{ steps.set-vars.outputs.automation_task }}\",\"action\":\"${{ steps.set-vars.outputs.action }}\",\"data_centre\":\"${{ steps.set-vars.outputs.data_centre }}\",\"environment\":\"${{ steps.set-vars.outputs.environment }}\",\"environment_type\":\"${{ steps.set-vars.outputs.environment_type }}\"}}"
          fi