name: ATM onboarding for DCC configuration
on:
  workflow_dispatch:  # Allows manual triggering of this workflow
    inputs:
      environment:
        description: 'Environment Name'
        required: true
        default: 'DEV'  # Default task name
        type: choice
        options:
          - DEV
          - TEST
          - QA
  schedule:
    - cron: '55 * * * *' # Every hour
    - cron: '45 * * * *' # Every 15 mins
    - cron: '*/5 * * * *' # Every 5 mins

jobs:
  traffic-controller:
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      skip: ${{ steps.set-env.outputs.skip }}
    strategy:
      matrix:
        environment:
          - name: DEV
            runner: ubuntu-latest
            cron: '55 * * * *' 
          - name: TEST
            runner: ubuntu-latest
            cron: '45 * * * *' 
          - name: QA
            runner: ubuntu-latest
            cron: '*/5 * * * *' 

    runs-on: ${{ matrix.environment.runner }}    
    steps:
      - name: Determine Environment and Skip Non-Matching Jobs
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "schedule" ]]; then 
            echo "Trigerred by Scheduler. Checking the scheduler cron"
            # if matrix.environment.cron and github.event.schedule are the same, then the job is not skipped
            if [[ "${{ matrix.environment.cron }}" == "${{ github.event.schedule }}" ]]; then
              echo "This job matches the current schedule. Proceeding."
              environment="${{ matrix.environment.name }}"
              echo "skip=true" >> $GITHUB_ENV
            fi
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "Its a workflow trigger. Setting environment to ${{ github.event.inputs.environment }}"
            echo "skip=true" >> $GITHUB_ENV
            environment="${{ github.event.inputs.environment }}"
          else
            echo "This job matches the criteria. Proceeding."
            echo "skip=false" 
          fi

          if [[ -z "$environment" ]]; then
            echo "No environment set. Skipping job."
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "Environment is $environment"
            echo "environment=$environment" >> $GITHUB_ENV
            echo "skip=false" >> $GITHUB_ENV
          fi
          echo "environment=$environment" >> $GITHUB_OUTPUT
          echo "skip=$skip" >> $GITHUB_OUTPUT    
  
  atm-onboarding-for-dcc-config:
    needs: traffic-controller
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4.1.7

      - name: Print Current GitHub Time
        run: date -u     

      - name: Copy scripts to Jump server   
        run: | 
          
          echo "Environment: ${{ needs.traffic-controller.outputs.environment }}"
          